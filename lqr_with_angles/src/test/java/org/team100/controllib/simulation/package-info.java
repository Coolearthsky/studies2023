package org.team100.controllib.simulation;

/**
 * Illustrates delayed measurements and what to do with them.
 * 
 * TODO: actually delay the measurements. :-)
 * 
 * For the data generated by these tests, look here:
 * 
 * https://docs.google.com/spreadsheets/d/1miehTmvbdRFs49wy2x8u_3SqVKrNw-oJB5Dv5-uQYo0
 * 
 * Timing
 * 
 * Sensor delay has several components:
 * * position sample rate
 * * velocity window width
 * * velocity averaging
 * * reporting rate
 * 
 * Using SparkMax velocity measurement is described here
 * 
 * https://docs.revrobotics.com/sparkmax/software-resources/configuration-parameters
 * 
 * the sparkmax measures velocity with a two-step process.
 * 
 * first it samples velocity using the current position and a past position, and
 * then it averages the past N samples.
 * 
 * the sparkmax takes a position measurement every 500 us.
 * 
 * kEncoderSampleDelta is the number of position measurements to look back.
 * 
 * for the built-in sensor it must be between 8 and 64, default is 32 which
 * means 0.016s between samples.
 * 
 * kEncoderAverageDepth is the number of velocity samples to average.
 * for the built-in sensor it is 1,2,4, or 8 (the default); it just averages the
 * past N samples.
 * 
 * so using the default dt and the default average depth, the edge of the window
 * is 0.128s ago.
 * 
 * The SparkMax reporting frequency is described here:
 * 
 * https://docs.revrobotics.com/sparkmax/operating-modes/control-interfaces
 * 
 * Velocity is reported via CAN as part of Periodic Status 1, which has a
 * default rate of 20ms
 * Position is reported via CAN as part of Periodic Status 2, which has a
 * default rate of 20ms.
 * 
 * these rates can be increased a little, like to 10ms if the rio is running a
 * fast loop.
 * 
 * but for now use 20ms.
 * 
 * assume that the marshalling delay is zero.
 * 
 * Another example of measurement delay is the gyro
 * 
 * https://pdocs.kauailabs.com/navx-mxp/wp-content/uploads/2019/02/navx-mxp_robotics_navigation_sensor_user_guide.pdf
 * 
 * this specifies 1ms latency for the USB interface, and 200Hz sampling, and
 * also suggests that the on-board filter is EKF, which means it should have
 * pretty low latency relative to the sampling frequency?
 */